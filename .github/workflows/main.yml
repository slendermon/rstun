name: Rust Build and Publish

on:
  workflow_dispatch:
  push:
    tags:
      - 'release/*'

jobs:
  linux-musl-aarch64:
    name: Linux musl Aarch64
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-unknown-linux-musl
          override: true
      - name: Build and package
        run: |
          rustup target add aarch64-unknown-linux-musl
          cargo install cross --git https://github.com/cross-rs/cross
          cross build --all-features --release --target aarch64-unknown-linux-musl
          mkdir -p rstun-linux-aarch64-musl
          mv target/aarch64-unknown-linux-musl/release/rstunc ./rstun-linux-aarch64-musl/
          mv target/aarch64-unknown-linux-musl/release/rstund ./rstun-linux-aarch64-musl/
          tar zcf rstun-linux-aarch64-musl.tar.gz ./rstun-linux-aarch64-musl/*
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: rstun-linux-aarch64-musl
          path: rstun-linux-aarch64-musl.tar.gz
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            rstun-linux-aarch64-musl.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # New steps for publishing to GitHub Packages
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./path/to/your/file.zip
          asset_name: your-file-name.zip
          asset_content_type: application/zip
